#!/bin/bash
# Retraining pipeline for m6Anet
#The current directory is the modified m6Anet
# Step 0 - (Optional) Signal-level preprocessing using nanopolish
# Ensure eventalign files are generated before proceeding

# Step 1 - Data preparation
m6anet dataprep --eventalign $EVENTALIGN \
                --out_dir $OUT_DIR \
                --n_processes $N_PROCESSES \
                -m $modification \
                --readcount_max 2000000
# $modification: one of m1A, m7G, m6A, psU, or m5C

# Step 2 - Feature labeling and dataset generation
# Labeled datasets are generated by assigning binary modification status (modified = 1; unmodified = 0)
# using a custom script (add_modification_status.py), followed by concatenation of JSON-format feature files
# and integration into a unified training dataset using merge.py.

# Step 3 - Model training
m6anet train --model_config $MODEL_CONFIG \
             --train_config $TRAIN_CONFIG \
             --save_dir $SAVE_DIR \
             --epochs 300 \
             --modification $modification

# Step 4 - Model inference
m6anet inference --input_dir $INPUT_DIR \
                 --out_dir $OUT_DIR \
                 --model_config $MODEL_CONFIG \
                 --model_state_dict $MODEL_STATE_DICT \
                 --n_processes 32 \
                 --modification $modification

# Notes:
# - $INPUT_DIR: directory containing data.info and data.json
# - $MODEL_CONFIG: path to the model configuration file
# - $MODEL_STATE_DICT: path to the pretrained model weights
